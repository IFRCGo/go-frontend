/* ==========================================================================
   Utilities
   ========================================================================== */

/* Font smoothing
   ========================================================================== */

/**
 * Antialiased font smoothing works best for light text on a dark background.
 * Apply to single elements instead of globally to body.
 * Note this only applies to webkit-based desktop browsers and Firefox 25 (and later) on the Mac.
 */

.antialiased {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}


/* Truncated text
   ========================================================================== */

.truncated {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}


/* Hidden content
   ========================================================================== */

/* Hide from both screenreaders and browsers */

.hidden {
  display: none !important;
  visibility: hidden;
}

/* Hide only visually, but have it available for screenreaders */

.visually-hidden {
  border: 0 none;
  clip: rect(0px, 0px, 0px, 0px);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;
}

/**
 * Extends the .visually-hidden class to allow the element
 * to be focusable when navigated to via the keyboard
 */

.visually-hidden.focusable:active,
.visually-hidden.focusable:focus {
  clip: auto;
  height: auto;
  margin: 0;
  overflow: visible;
  position: static;
  width: auto;
}

/* Undo visually-hidden */

.visually-hidden-undo {
  position: inherit;
  overflow: visible;
  height: auto;
  width: auto;
  margin: auto;
}

/* Hide visually and from screenreaders, but maintain layout */

.invisible {
  visibility: hidden;
}


/* Disabled
   ========================================================================== */

.disabled {
  opacity: 0.48;
  pointer-events: none;
  cursor: not-allowed;
}

.visually-disabled {
  &,
  &:hover,
  &:active,
  &:focus {
    opacity: 0.48 !important;
    cursor: not-allowed;
  }
}


/* Scrollable
   ========================================================================== */

.scrollable-x  {
  position: relative;
  min-height: .01%;
  overflow-x: auto;
  overflow-y: hidden;
  width: 100%;

  > *:last-child {
    margin-bottom: 0;
  }
}


/* Unscrollable
   ========================================================================== */

.unscrollable-y {
  overflow-y: hidden;
}

.unscrollable-x {
  overflow-x: hidden;
}


/* Round shapes
   ========================================================================== */

.circle,
.capsule {
  border-radius: 100vh;
}

.oval {
  border-radius: 100% / 50%;
}

.rounded {
  border-radius: $base-border-radius;
}


/* Aligning
   ========================================================================== */

.float-left {
  float: left;
}

.float-right {
  float: right;
}

.text-left {
  text-align: left;
}

.text-right {
  text-align: right;
}

.text-center {
  text-align: center;
}

.block-center {
  display: block;
  margin-left: auto;
  margin-right: auto;
}


/* Clearfix
   ========================================================================== */

.clearfix {
  &::before,
  &::after {
    content: " ";
    display: table;
  }

  &::after {
    clear: both;
  }
}


/* Flexbox
   ========================================================================== */
.flex {
  display: flex;
}

/* Spacing Utilities: Padding
   ========================================================================== */

$spacing-global: (
  global-spacing: $global-spacing,
  global-spacing-2: $global-spacing-2,
  global-spacing-3: $global-spacing-3,
);

// Globals: Spacing: Vertical

// Generates placeholders and classes for vertical spacing
// Uses padding top and bottom
// E.g. .global-spacing-v, %global-spacing-v, .global-spacing-2-v, %global-spacing-2-v, etc.

@each $name, $value in $spacing-global {
  .#{$name}-v, %#{$name}-v {
    padding-top: $value;
    padding-bottom: $value;
  }
}

// Globals: Spacing: Horizontal

// Generates placeholders and classes for horizontal spacing
// Uses padding left and right
// E.g. .global-spacing-h, %global-spacing-h, .global-spacing-2-h, %global-spacing-2-h, etc.

@each $name, $value in $spacing-global {
  .#{$name}-h, %#{$name}-h {
    padding-left: $value;
    padding-right: $value;
  }
}

// Globals: Spacing: Top

// Generates placeholders and classes for top spacing
// Uses padding top
// E.g. .global-spacing-t, %global-spacing-t, .global-spacing-2-t, %global-spacing-3-t, etc.

@each $name, $value in $spacing-global {
  .#{$name}-t, %#{$name}-t {
    padding-top: $value;
  }
}

// Globals: Spacing: Bottom

// Generates placeholders and classes for top spacing
// Uses padding bottom
// E.g. .global-spacing-b, %global-spacing-b, .global-spacing-2-b, %global-spacing-3-b, etc.

@each $name, $value in $spacing-global {
  .#{$name}-b, %#{$name}-b {
    padding-bottom: $value;
  }
}

// Globals: Spacing

// Generates placeholders and classes for spacing
// Uses padding on all four sides
// E.g. .global-spacing, %global-spacing, .global-spacing-2, %global-spacing-2, etc.

@each $name, $value in $spacing-global {
  .#{$name}, %#{$name} {
    padding: $value;
  }
}



/* Spacing Utilities: Padding
   ========================================================================== */

$spacing-global: (
  global-margin: $global-spacing,
  global-margin-2: $global-spacing-2,
  global-margin-3: $global-spacing-3,
);

// Globals: Margins: Vertical

// Generates placeholders and classes for vertical margins
// Uses margin top and bottom
// E.g. .global-margin-v, %global-margin-v, .global-margin-2-v, %global-margin-2-v, etc.

@each $name, $value in $spacing-global {
  .#{$name}-v, %#{$name}-v {
    margin-top: $value;
    margin-bottom: $value;
  }
}

// Globals: Margins: Horizontal

// Generates placeholders and classes for horizontal margins
// Uses margin left and right
// E.g. .global-margin-h, %global-margin-h, .global-margin-2-h, %global-margin-2-h, etc.

@each $name, $value in $spacing-global {
  .#{$name}-h, %#{$name}-h {
    margin-left: $value;
    margin-right: $value;
  }
}

// Globals: Spacing: Top

// Generates placeholders and classes for top margin
// Uses margin top
// E.g. .global-margin-t, %global-margin-t, .global-margin-2-t, %global-margin-3-t, etc.

@each $name, $value in $spacing-global {
  .#{$name}-t, %#{$name}-t {
    margin-top: $value;
  }
}

// Globals: Spacing: Bottom

// Generates placeholders and classes for bottom margin
// Uses margin bottom
// E.g. .global-margin-b, %global-margin-b, .global-margin-2-b, %global-margin-3-b, etc.

@each $name, $value in $spacing-global {
  .#{$name}-b, %#{$name}-b {
    margin-bottom: $value;
  }
}

// Globals: Spacing

// Generates placeholders and classes for margins
// Uses margin on all four sides
// E.g. .global-margin, %global-margin, .global-margin-2, %global-margin-2, etc.

@each $name, $value in $spacing-global {
  .#{$name}, %#{$name} {
    margin: $value;
  }
}
